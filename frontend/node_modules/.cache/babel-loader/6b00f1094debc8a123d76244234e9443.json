{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Documents/Projects/spotifyDash/frontend/spotifydash/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ChakraProvider, Box, Grid, Button, theme } from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport Login from './components/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [login, setLogin] = useState([]);\n  const [name, setName] = useState([]);\n\n  async function getName() {\n    await fetch('/home').then(response => response.json().then(data => {\n      setName(data.message);\n    }));\n  }\n\n  useEffect(() => {\n    fetch('/home').then(response => response.json().then(data => {\n      setLogin(data.message);\n    }));\n  });\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      fontSize: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        minH: \"100vh\",\n        p: 3,\n        children: [/*#__PURE__*/_jsxDEV(ColorModeSwitcher, {\n          justifySelf: \"flex-end\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => getName(),\n          children: \"Get Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Rl2aeJAk+MJxtHV1DPluggiNl9M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/evan/Documents/Projects/spotifyDash/frontend/spotifydash/src/App.js"],"names":["React","useEffect","useState","ChakraProvider","Box","Grid","Button","theme","ColorModeSwitcher","Login","App","login","setLogin","name","setName","getName","fetch","then","response","json","data","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,MAApC,EAA4CC,KAA5C,QAAyD,kBAAzD;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;;AAEA,iBAAea,OAAf,GAAyB;AACvB,UAAMC,KAAK,CAAC,OAAD,CAAL,CAAeC,IAAf,CAAoBC,QAAQ,IAChCA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AAC3BN,MAAAA,OAAO,CAACM,IAAI,CAACC,OAAN,CAAP;AACD,KAFD,CADI,CAAN;AAKD;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,KAAK,CAAC,OAAD,CAAL,CAAeC,IAAf,CAAoBC,QAAQ,IAC1BA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AAC3BR,MAAAA,QAAQ,CAACQ,IAAI,CAACC,OAAN,CAAR;AACD,KAFD,CADF;AAKD,GANQ,CAAT;AAQA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEd,KAAvB;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,QAAQ,EAAC,IAAjC;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,CAAC,EAAE,CAAtB;AAAA,gCACE,QAAC,iBAAD;AAAmB,UAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMI;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAME,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAjCQL,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ChakraProvider, Box, Grid, Button, theme } from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport Login from './components/Login';\n\nfunction App() {\n  const [login, setLogin] = useState([]);\n  const [name, setName] = useState([]);\n\n  async function getName() {\n    await fetch('/home').then(response =>\n      response.json().then(data => {\n        setName(data.message);\n      })\n    );\n  }\n\n  useEffect(() => {\n    fetch('/home').then(response =>\n      response.json().then(data => {\n        setLogin(data.message);\n      })\n    );\n  });\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Box textAlign=\"center\" fontSize=\"xl\">\n        <Grid minH=\"100vh\" p={3}>\n          <ColorModeSwitcher justifySelf=\"flex-end\" />\n          <div>{login}</div>\n          <div>{name}</div>\n          <Login></Login>\n          <Button onClick={() => getName()}>Get Name</Button>;\n        </Grid>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}