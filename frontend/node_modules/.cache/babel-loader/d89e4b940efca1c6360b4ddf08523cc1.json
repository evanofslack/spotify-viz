{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Documents/GitHub/spotify-viz/frontend/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ChakraProvider, Flex } from \"@chakra-ui/react\";\nimport { NavBar } from \"./NavBar\";\nimport HomeBlurb from \"./HomeBlurb\";\nimport CurrentlyListening from \"./CurrentlyListing\";\nimport theme from \".././themes/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [data, setData] = useState({\n    display_name: null,\n    current_song: null,\n    current_artist: null\n  });\n  useEffect(() => {\n    fetch(\"/home\").then(response => response.json().then(data => {\n      setData({\n        display_name: data.display_name,\n        current_song: data.current_song,\n        current_artist: data.current_artist\n      });\n    }));\n  }, []);\n  const {\n    display_name,\n    current_song,\n    current_artist\n  } = data;\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      align: \"center\",\n      justify: \"center\",\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HomeBlurb, {\n        name: display_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), current_song && /*#__PURE__*/_jsxDEV(CurrentlyListening, {\n        song: current_song,\n        artist: current_artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"79QqsjoSygGg866+6q7dQFZp3iI=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/evan/Documents/GitHub/spotify-viz/frontend/src/components/Home.js"],"names":["React","useState","useEffect","ChakraProvider","Flex","NavBar","HomeBlurb","CurrentlyListening","theme","Home","data","setData","display_name","current_song","current_artist","fetch","then","response","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,EAAyBC,IAAzB,QAAqC,kBAArC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC;AAC7BW,IAAAA,YAAY,EAAE,IADe;AAE7BC,IAAAA,YAAY,EAAE,IAFe;AAG7BC,IAAAA,cAAc,EAAE;AAHa,GAAD,CAAhC;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,KAAK,CAAC,OAAD,CAAL,CAAeC,IAAf,CAAqBC,QAAD,IAChBA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBN,IAAD,IAAU;AAC3BC,MAAAA,OAAO,CAAC;AACJC,QAAAA,YAAY,EAAEF,IAAI,CAACE,YADf;AAEJC,QAAAA,YAAY,EAAEH,IAAI,CAACG,YAFf;AAGJC,QAAAA,cAAc,EAAEJ,IAAI,CAACI;AAHjB,OAAD,CAAP;AAKH,KAND,CADJ;AASH,GAVQ,EAUN,EAVM,CAAT;AAYA,QAAM;AAAEF,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA;AAA9B,MAAiDJ,IAAvD;AAEA,sBACI,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEF,KAAvB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAC,QAA7B;AAAsC,MAAA,SAAS,EAAC,QAAhD;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEI;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKC,YAAY,iBAAI,QAAC,kBAAD;AAAoB,QAAA,IAAI,EAAEA,YAA1B;AAAwC,QAAA,MAAM,EAAEC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA9BQL,I;;KAAAA,I;AAgCT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ChakraProvider, Flex } from \"@chakra-ui/react\";\nimport { NavBar } from \"./NavBar\";\nimport HomeBlurb from \"./HomeBlurb\";\nimport CurrentlyListening from \"./CurrentlyListing\";\nimport theme from \".././themes/theme\";\n\nfunction Home() {\n    const [data, setData] = useState({\n        display_name: null,\n        current_song: null,\n        current_artist: null,\n    });\n\n    useEffect(() => {\n        fetch(\"/home\").then((response) =>\n            response.json().then((data) => {\n                setData({\n                    display_name: data.display_name,\n                    current_song: data.current_song,\n                    current_artist: data.current_artist,\n                });\n            })\n        );\n    }, []);\n\n    const { display_name, current_song, current_artist } = data;\n\n    return (\n        <ChakraProvider theme={theme}>\n            <Flex align=\"center\" justify=\"center\" direction=\"column\">\n                <NavBar></NavBar>\n                <HomeBlurb name={display_name} />\n                {current_song && <CurrentlyListening song={current_song} artist={current_artist} />}\n            </Flex>\n        </ChakraProvider>\n    );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}