{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Documents/Projects/spotifyDash/frontend/spotifydash/src/components/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    fetch('/home').then(response => response.json().then(data => {\n      console.log(data.isLoggedIn);\n      setIsLoggedIn(data.isLoggedIn);\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/evan/Documents/Projects/spotifyDash/frontend/spotifydash/src/components/PrivateRoute.js"],"names":["React","useEffect","useState","Redirect","Route","PrivateRoute","component","Component","rest","isLoggedIn","setIsLoggedIn","fetch","then","response","json","data","console","log","props","pathname","state","from","location"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC1D,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,OAAD,CAAL,CAAeC,IAAf,CAAoBC,QAAQ,IAC1BA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBG,IAAI,IAAI;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACN,UAAjB;AACAC,MAAAA,aAAa,CAACK,IAAI,CAACN,UAAN,CAAb;AACD,KAHD,CADF;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE,QAAC,KAAD,OACMD,IADN;AAEE,IAAA,MAAM,EAAEU,KAAK,IACXT,UAAU,gBACR,QAAC,SAAD,OAAeS;AAAf;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B;AADN;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA1BD;;GAAMjB,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    fetch('/home').then(response =>\n      response.json().then(data => {\n        console.log(data.isLoggedIn);\n        setIsLoggedIn(data.isLoggedIn);\n      })\n    );\n  }, []);\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: '/login', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}