{"ast":null,"code":"var _jsxFileName = \"/Users/evan/Documents/GitHub/spotify-viz/frontend/src/routes/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState([]);\n  useEffect(() => {\n    fetch(\"/is_logged_in\").then(response => response.json().then(data => {\n      console.log(data.isLoggedIn);\n      setIsLoggedIn(data.isLoggedIn);\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PrivateRoute, \"wSR5qCBHmDBPvXzjdBP4Nu9ATLk=\");\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/evan/Documents/GitHub/spotify-viz/frontend/src/routes/PrivateRoute.js"],"names":["React","useEffect","useState","Redirect","Route","PrivateRoute","component","Component","rest","isLoggedIn","setIsLoggedIn","fetch","then","response","json","data","console","log","props","pathname","state","from","location"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AACxD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,eAAD,CAAL,CAAuBC,IAAvB,CAA6BC,QAAD,IACxBA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBG,IAAD,IAAU;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACN,UAAjB;AACAC,MAAAA,aAAa,CAACK,IAAI,CAACN,UAAN,CAAb;AACH,KAHD,CADJ;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI,QAAC,KAAD,OACQD,IADR;AAEI,IAAA,MAAM,EAAGU,KAAD,IACJT,UAAU,gBACN,QAAC,SAAD,OAAeS;AAAf;AAAA;AAAA;AAAA;AAAA,YADM,gBAGN,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxBD;;GAAMjB,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const [isLoggedIn, setIsLoggedIn] = useState([]);\n\n    useEffect(() => {\n        fetch(\"/is_logged_in\").then((response) =>\n            response.json().then((data) => {\n                console.log(data.isLoggedIn);\n                setIsLoggedIn(data.isLoggedIn);\n            })\n        );\n    }, []);\n\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                isLoggedIn ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}